//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Users.API.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class QuestionsResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal QuestionsResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Users.API.Resources.QuestionsResource", typeof(QuestionsResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Which of the following is correct about variable naming conventions in C#?.
        /// </summary>
        public static string Question1 {
            get {
                return ResourceManager.GetString("Question1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The finally block is used to execute a given set of statements, whether an exception is thrown or not thrown..
        /// </summary>
        public static string Question10 {
            get {
                return ResourceManager.GetString("Question10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Which of the following is correct about Object Type in C#?.
        /// </summary>
        public static string Question2 {
            get {
                return ResourceManager.GetString("Question2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Which of the following converts a type to a small floating point number in C#?.
        /// </summary>
        public static string Question3 {
            get {
                return ResourceManager.GetString("Question3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Which of the following operator determines whether an object is of a certain type in C#?.
        /// </summary>
        public static string Question4 {
            get {
                return ResourceManager.GetString("Question4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Which of the following access specifier in C# allows a class to expose its member variables and member functions to other functions and objects?.
        /// </summary>
        public static string Question5 {
            get {
                return ResourceManager.GetString("Question5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Which of the following is true about C# structures?.
        /// </summary>
        public static string Question6 {
            get {
                return ResourceManager.GetString("Question6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Which of the following is the default access specifier of a class?.
        /// </summary>
        public static string Question7 {
            get {
                return ResourceManager.GetString("Question7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dynamic polymorphism is implemented by abstract classes and virtual functions..
        /// </summary>
        public static string Question8 {
            get {
                return ResourceManager.GetString("Question8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Which of the following preprocessor directive specifies the end of a conditional directive in C#?.
        /// </summary>
        public static string Question9 {
            get {
                return ResourceManager.GetString("Question9", resourceCulture);
            }
        }
    }
}
